package <%= package %>
{
	/**
	 * Generated by `as3enum`
	 * @see https://github.com/ldrly/as3-enum-builder
	 */
	public final class <%= name %>
	{
		private static var _sealed:Boolean = false;
		private static const _all:Vector.<<%= name %>> = new <<%= name %>>[];

	<% _.forEach(values, (value,i) => { %>
		public static const <%= _.snakeCase(value).toUpperCase() %>:<%= name %> = new <%= name %>(<%= i %>, "<%= value %>");
	<% }); %>

		public static function fromValue(i:int):<%= name %>
		{
			for each (var n:<%= name %> in _all)
			{
				if (n.value == i) return n;
			}
			return null;
		}

		public static function parse(str:String):<%= name %>
		{
			for each (var n:<%= name %> in _all)
			{
				if (n.description == str) return n;
			}
			return null;
		}

		private var _value:int;
		public function get value():int { return _value; }

		private var _description:String;
		public function get description():String { return _description; }

		function <%= name %>(value:int, description:String)
		{
			if (_sealed) throw new TypeError("Enum is sealed");
			this._value = value;
			this._description = description;
			_all.push(this);
		}

		public function toString():String { return _description; }

		_sealed = true;
	}
}
