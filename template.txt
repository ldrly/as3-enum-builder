/**
 * Generated by `as3enum`
 * @see https://github.com/ldrly/as3-enum-builder
 */
final class <%= name %> {
<% _.forEach(values, (value,i) => { %>
	public static const <%= _.snakeCase(value).toUpperCase() %>:<%= name %> = new <%= name %>(<%= i %>, "<%= value %>", new Z());
<% }); %>

	private var _value:int;
	public function get value():int { return _value; }

	private var _description:String;
	public function get description():String { return _description; }


	private static const _all:Vector.<<%= name %>> = new <<%= name %>>[<% _.forEach(values, (value) => { %><%= _.snakeCase(value).toUpperCase() %>, <% }) %>];

	public static function fromValue(i:int):<%= name %>
	{
		for each (var n:<%= name %> in _all)
		{
			if (n.value == i) return n;
		}
		return null;
	}

	public static function parse(str:String):<%= name %>
	{
		for each (var n:<%= name %> in _all)
		{
			if (n.description == str) return n;
		}
		return null;
	}


	public function <%= name %>(value:int, description:String, _:Z)
	{
		this._value = value;
		this._description = description;
	}

	public function toString():String { return _description; }
}
class Z {}
